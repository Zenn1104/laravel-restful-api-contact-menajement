openapi: '3.0.2'
info:
  title: Users API
  version: '1.0'
servers:
  - url: https://localhost:8000/api/users
paths:
  /users:
    post:
      description: Register new user
      requestBody:
        content:
          application/json:
            examples:
              zenn: 
                description: register user zenn
                value: 
                  username: zenn
                  password: rahasia
                  name: Baso M Alif
            schema:
              type: object
              required:
                - name
                - password 
                - username
              properties:
                username:
                  type: string
                password:
                  type: string
                name:
                  type: string
      responses:
        '400':
          description: Validation Error
          content:
            application/json:
              examples:
                validationerror:
                  description: Validation Error
                  value:
                    errors:
                      username: 
                        - username must not be blank
                        - username min 6 characters
                      name: 
                        - name must not be blank
                        - name min 6 characters
        '201':
          description: success Register new User
          content:
            application/json:
              examples:
                success:
                  description: Success Register new User
                  value:
                    data:
                      id: 1
                      name: Baso M Alif 
                      username: zenn
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      username:
                        type: string
                      name:
                        type: string
                  errors:
                    type: object
  /users/login:
    post:
      description: Login user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success Login user
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      username:
                        type: string
                      name:
                        type: string
                      token:
                        type: string
                  errors:
                    type: object


  /users/current:
    get:
      description: get current users
      parameters:
        - name: Authorization
          in: header
          schema: 
            $ref: '#/components/schemas/userId'
      responses:
        '200':
          description: Success get current user
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      username:
                        type: string
                      name:
                        type: string
                  errors:
                    type: object
    patch:
      description: Update current user
      parameters:
        - name: Authorization
          in: header
          schema: 
            $ref: '#/components/schemas/userId'
      requestBody:
        description: Update current Users
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      username:
                        type: string
                      name:
                        type: string
                  errors:
                    type: object
  /api/users/logout:
    delete:
      description: Logout current user
      parameters:
        - name: Authorization
          in: header
          schema: 
            $ref: '#/components/schemas/userId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: boolean
                  errors:
                    type: object
components:
    schemas:
      userId:
        type: string